{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/serg/Desktop/movie-app/src/FavoriteMovies/FavoriteMovies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFavoriteMoviesFromLocalStorage, toggleFavoriteMovie } from \"../store/actions\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140,\n    paddingTop: '56.25%'\n  }\n});\n\nconst FavoriteMovies = () => {\n  _s();\n\n  const classes = useStyles();\n  const favoriteMovies = useSelector(state => state.favoriteMovies);\n  const dispatch = useDispatch();\n  const favoriteMoviesFromLS = JSON.parse(localStorage.getItem('favoriteMovies'));\n  useEffect(() => {\n    if (Object.keys(favoriteMovies).length === 0 && Object.keys(favoriteMoviesFromLS).length > 0) {\n      dispatch(getFavoriteMoviesFromLocalStorage(favoriteMoviesFromLS));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 1,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Favorite movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        minHeight: '100vh'\n      },\n      children: Object.values(favoriteMovies).map(({\n        title,\n        poster,\n        id\n      }) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              className: classes.media,\n              image: poster,\n              title: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h5\",\n                component: \"h2\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              color: \"primary\",\n              onClick: () => dispatch(toggleFavoriteMovie(id)),\n              children: \"REMOVE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              color: \"primary\",\n              component: Link,\n              to: `/movieDetail/${id}`,\n              children: \"DETAIl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 8\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FavoriteMovies, \"f2Js9fFyNTIkvdibR+goIEyM4Yo=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = FavoriteMovies;\nexport default FavoriteMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoriteMovies\");","map":{"version":3,"sources":["/Users/serg/Desktop/movie-app/src/FavoriteMovies/FavoriteMovies.js"],"names":["React","useEffect","useDispatch","useSelector","getFavoriteMoviesFromLocalStorage","toggleFavoriteMovie","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Grid","Box","Link","useStyles","root","maxWidth","media","height","paddingTop","FavoriteMovies","classes","favoriteMovies","state","dispatch","favoriteMoviesFromLS","JSON","parse","localStorage","getItem","Object","keys","length","minHeight","values","map","title","poster","id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFavoriteMoviesFromLocalStorage, toggleFavoriteMovie } from \"../store/actions\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from '@material-ui/core/Box'\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tmaxWidth: 345,\n\t},\n\tmedia: {\n\t\theight: 140,\n\t\tpaddingTop: '56.25%',\n\t},\n});\n\nconst FavoriteMovies = () => {\n\tconst classes = useStyles();\n\n\tconst favoriteMovies = useSelector(state => state.favoriteMovies)\n\tconst dispatch = useDispatch();\n\tconst favoriteMoviesFromLS = JSON.parse(localStorage.getItem('favoriteMovies'))\n\n\tuseEffect(() => {\n\t\tif (Object.keys(favoriteMovies).length === 0 && Object.keys(favoriteMoviesFromLS).length > 0) {\n\t\t\tdispatch(getFavoriteMoviesFromLocalStorage(favoriteMoviesFromLS))\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" margin={1}>\n\t\t\t<h1>Favorite movies</h1>\n\t\t\t<Grid container spacing={2} style={{ minHeight: '100vh' }}>\n\t\t\t\t{\n\t\t\t\t\tObject.values(favoriteMovies).map(({ title, poster, id }) => (\n\t\t\t\t\t\t<Grid item xs={2} key={id}>\n\t\t\t\t\t\t\t<Card className={classes.root}>\n\t\t\t\t\t\t\t\t<CardActionArea>\n\t\t\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\t\t\t\t\t\timage={poster}\n\t\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t</CardActionArea>\n\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t<Button size=\"small\" color=\"primary\" onClick={() => dispatch(toggleFavoriteMovie(id))}>\n\t\t\t\t\t\t\t\t\t\tREMOVE\n        \t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Button size=\"small\" color=\"primary\" component={Link} to={`/movieDetail/${id}`}>\n\t\t\t\t\t\t\t\t\t\tDETAIl\n        \t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</Grid >\n\t\t</Box>\n\t);\n};\n\nexport default FavoriteMovies"]},"metadata":{},"sourceType":"module"}