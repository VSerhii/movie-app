{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/serg/Desktop/movie-app/src/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { requestDataByPage, setPagginationPage } from \"../store/actions\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Grid from \"@material-ui/core/Grid\";\nimport MovieCard from './MovieCard';\nimport Box from '@material-ui/core/Box';\nimport Pagination from '@material-ui/lab/Pagination';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Home = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const movies = useSelector(state => {\n    var _state$movies;\n\n    return (_state$movies = state.movies) === null || _state$movies === void 0 ? void 0 : _state$movies.data;\n  });\n  const isLoading = useSelector(state => state.isLoading);\n  const totalResults = useSelector(state => {\n    var _state$movies2;\n\n    return (_state$movies2 = state.movies) === null || _state$movies2 === void 0 ? void 0 : _state$movies2.totalResults;\n  });\n  const searchValue = useSelector(state => state.searchValue);\n  const page = useSelector(state => state.pagginationPage);\n\n  const handlePagginationPageChange = (event, value) => {\n    dispatch(setPagginationPage(value));\n    dispatch(requestDataByPage(searchValue, value));\n  };\n\n  const getPagesForPaggination = () => {\n    if (Number(totalResults) % 1 !== 0) {\n      return Number(totalResults) / 10;\n    } else return Math.floor(Number(totalResults) / 10) + 1;\n  };\n\n  const renderContent = () => {\n    if (!isLoading && !movies) return /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '40%'\n      },\n      children: \"No results found \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 37\n    }, this);\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          position: 'absolute',\n          top: '50%',\n          right: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          style: {\n            minHeight: '100vh'\n          },\n          children: movies.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(MovieCard, {\n              title: item.Title,\n              poster: item.Poster,\n              id: item.imdbID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 10\n            }, this)\n          }, item.imdbID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          count: getPagesForPaggination(),\n          onChange: handlePagginationPageChange,\n          page: page,\n          style: {\n            display: 'flex',\n            justifyContent: \"center\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    margin: 1,\n    children: renderContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Home, \"l/61yVPbkN88RCRJDK+PA6h85oQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/serg/Desktop/movie-app/src/Home/Home.js"],"names":["React","requestDataByPage","setPagginationPage","useDispatch","useSelector","Grid","MovieCard","Box","Pagination","CircularProgress","Home","dispatch","movies","state","data","isLoading","totalResults","searchValue","page","pagginationPage","handlePagginationPageChange","event","value","getPagesForPaggination","Number","Math","floor","renderContent","position","top","left","right","minHeight","map","item","Title","Poster","imdbID","display","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { requestDataByPage, setPagginationPage } from \"../store/actions\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport Grid from \"@material-ui/core/Grid\";\nimport MovieCard from './MovieCard'\nimport Box from '@material-ui/core/Box'\nimport Pagination from '@material-ui/lab/Pagination';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Home = () => {\n\tconst dispatch = useDispatch();\n\tconst movies = useSelector(state => state.movies?.data);\n\tconst isLoading = useSelector(state => state.isLoading)\n\tconst totalResults = useSelector(state => state.movies?.totalResults);\n\tconst searchValue = useSelector(state => state.searchValue);\n\tconst page = useSelector(state => state.pagginationPage)\n\n\tconst handlePagginationPageChange = (event, value) => {\n\t\tdispatch(setPagginationPage(value))\n\t\tdispatch(requestDataByPage(searchValue, value))\n\t}\n\n\tconst getPagesForPaggination = () => {\n\t\tif (Number(totalResults) % 1 !== 0) {\n\t\t\treturn Number(totalResults) / 10\n\t\t} else return Math.floor(Number(totalResults) / 10) + 1\n\t}\n\n\tconst renderContent = () => {\n\t\tif (!isLoading && !movies) return <h1 style={{ position: 'absolute', top: '50%', left: '40%' }}>No results found </h1>\n\t\tif (isLoading) {\n\t\t\treturn <CircularProgress style={{ position: 'absolute', top: '50%', right: '50%' }} />\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Grid container spacing={2} style={{ minHeight: '100vh' }}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmovies.map(item => (\n\t\t\t\t\t\t\t\t<Grid item xs={4} key={item.imdbID}>\n\t\t\t\t\t\t\t\t\t<MovieCard title={item.Title} poster={item.Poster} id={item.imdbID} />\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid >\n\t\t\t\t\t<Pagination\n\t\t\t\t\t\tcount={getPagesForPaggination()}\n\t\t\t\t\t\tonChange={handlePagginationPageChange}\n\t\t\t\t\t\tpage={page}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n\treturn (\n\t\t<Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" margin={1}>\n\t\t\t{renderContent()}\n\t\t</Box>\n\t)\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}