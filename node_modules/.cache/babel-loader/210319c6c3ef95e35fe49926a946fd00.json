{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/serg/Desktop/movie-app/src/MovieDetail/MovieDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { useParams } from \"react-router-dom\";\nimport { requestMovieDetail, toggleFavoriteMovie } from \"../store/actions\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 600\n  },\n  iconActive: {\n    color: 'red'\n  },\n  iconDisabled: {\n    color: 'grey'\n  }\n});\n\nconst MovieDetail = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const movieDetail = useSelector(state => state.movieDetail);\n  const favoriteMovies = useSelector(state => state.favoriteMovies);\n  useEffect(() => dispatch(requestMovieDetail(id)), [id]);\n\n  if (!movieDetail) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }, this);\n  }\n\n  const {\n    Title,\n    Poster,\n    Ratings\n  } = movieDetail;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"60px\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => dispatch(toggleFavoriteMovie(id, Poster, Title)),\n        children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n          className: favoriteMovies && favoriteMovies[id] ? classes.iconActive : classes.iconDisabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Poster,\n          alt: \"Movie Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Ratings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), Ratings.map(rating => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: rating.Source\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: rating.Value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this)]\n        }, rating.Source, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 8\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: classes.table,\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: Object.keys(movieDetail).map(name => name !== 'Poster' && name !== 'Ratings' && /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: movieDetail[name]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 12\n                }, this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 11\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MovieDetail, \"xUZ7jiVN1R4xW5EGrHfv+05yKAk=\", false, function () {\n  return [useStyles, useParams, useDispatch, useSelector, useSelector];\n});\n\n_c = MovieDetail;\nexport default MovieDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"sources":["/Users/serg/Desktop/movie-app/src/MovieDetail/MovieDetail.js"],"names":["React","useEffect","Fragment","Container","Box","useParams","requestMovieDetail","toggleFavoriteMovie","useDispatch","useSelector","CircularProgress","IconButton","FavoriteIcon","makeStyles","Table","TableBody","TableCell","TableContainer","TableRow","useStyles","table","maxWidth","iconActive","color","iconDisabled","MovieDetail","classes","id","dispatch","movieDetail","state","favoriteMovies","position","top","left","Title","Poster","Ratings","map","rating","Source","Value","Object","keys","name"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from 'react'\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box'\nimport { useParams } from \"react-router-dom\";\nimport { requestMovieDetail, toggleFavoriteMovie } from \"../store/actions\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles({\n\ttable: {\n\t\tmaxWidth: 600,\n\t},\n\ticonActive: {\n\t\tcolor: 'red',\n\t},\n\ticonDisabled: {\n\t\tcolor: 'grey'\n\t}\n});\n\nconst MovieDetail = () => {\n\tconst classes = useStyles()\n\tconst { id } = useParams();\n\tconst dispatch = useDispatch();\n\tconst movieDetail = useSelector(state => state.movieDetail);\n\tconst favoriteMovies = useSelector(state => state.favoriteMovies)\n\n\tuseEffect(() => dispatch(requestMovieDetail(id)), [id]);\n\n\tif (!movieDetail) {\n\t\treturn <CircularProgress style={{ position: 'absolute', top: '50%', left: '50%' }} />\n\t}\n\n\tconst { Title, Poster, Ratings } = movieDetail\n\n\treturn (\n\t\t<Container maxWidth=\"lg\">\n\t\t\t<Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\" height=\"60px\">\n\t\t\t\t<h1>{Title}</h1>\n\t\t\t\t<IconButton onClick={() => dispatch(toggleFavoriteMovie(id, Poster, Title))}>\n\t\t\t\t\t<FavoriteIcon className={favoriteMovies && favoriteMovies[id] ? classes.iconActive : classes.iconDisabled} />\n\t\t\t\t</IconButton>\n\t\t\t</Box>\n\t\t\t<Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-around\">\n\t\t\t\t<Box display=\"flex\" flexDirection=\"column\">\n\t\t\t\t\t<img src={Poster} alt=\"Movie Name\" />\n\t\t\t\t\t<span>Ratings</span>\n\t\t\t\t\t{\n\t\t\t\t\t\tRatings.map(rating => (\n\t\t\t\t\t\t\t<Fragment key={rating.Source}>\n\t\t\t\t\t\t\t\t<span>{rating.Source}</span>\n\t\t\t\t\t\t\t\t<span>{rating.Value}</span>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Box>\n\t\t\t\t<Box>\n\t\t\t\t\t<TableContainer >\n\t\t\t\t\t\t<Table className={classes.table}>\n\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tObject.keys(movieDetail).map((name) => name !== 'Poster' && name !== 'Ratings' && (\n\t\t\t\t\t\t\t\t\t\t<TableRow key={name}>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{movieDetail[name]}</TableCell>\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</TableContainer>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\n\nexport default MovieDetail"]},"metadata":{},"sourceType":"module"}